"""
import random
# List of coordinates
coordinates = [
    (240, 60), (300, 60), (360, 60), (420, 60), (480, 60), (540, 60), (600, 60), (660, 60), (720, 60), (780, 60),
    (840, 60), (900, 60), (960, 60), (1020, 60), (1080, 60), (240, 120), (360, 120), (480, 120), (600, 120), (720, 120),
    (840, 120), (960, 120), (1080, 120), (240, 180), (300, 180), (360, 180), (420, 180), (480, 180), (540, 180), (600, 180),
    (660, 180), (720, 180), (780, 180), (840, 180), (900, 180), (960, 180), (1020, 180), (1080, 180), (240, 240), (360, 240),
    (480, 240), (600, 240), (720, 240), (840, 240), (960, 240), (1080, 240), (240, 300), (300, 300), (360, 300), (420, 300),
    (480, 300), (540, 300), (600, 300), (660, 300), (720, 300), (780, 300), (840, 300), (900, 300), (960, 300), (1020, 300),
    (1080, 300), (240, 360), (360, 360), (480, 360), (600, 360), (720, 360), (840, 360), (960, 360), (1080, 360), (240, 420),
    (300, 420), (360, 420), (420, 420), (480, 420), (540, 420), (600, 420), (660, 420), (720, 420), (780, 420), (840, 420),
    (900, 420), (960, 420), (1020, 420), (1080, 420), (240, 480), (360, 480), (480, 480), (600, 480), (720, 480), (840, 480),
    (960, 480), (1080, 480), (240, 540), (300, 540), (360, 540), (420, 540), (480, 540), (540, 540), (600, 540), (660, 540),
    (720, 540), (780, 540), (840, 540), (900, 540), (960, 540), (1020, 540), (1080, 540), (240, 600), (360, 600), (480, 600),
    (600, 600), (720, 600), (840, 600), (960, 600), (1080, 600), (240, 660), (300, 660), (360, 660), (420, 660), (480, 660),
    (540, 660), (600, 660), (660, 660), (720, 660), (780, 660), (840, 660), (900, 660), (960, 660), (1020, 660), (1080, 660),
    (240, 720), (360, 720), (480, 720), (600, 720), (720, 720), (840, 720), (960, 720), (1080, 720)
]

def pick_random_tiles(coordinates, num_tiles):
    # Randomly pick 'num_tiles' coordinates
    return random.sample(coordinates, num_tiles)

# Example usage
num_tiles = 48  # Number of random tiles to pick
random_tiles = pick_random_tiles(coordinates, num_tiles)
print(random_tiles)

"""
"""
coordinates = [(600, 240), (360, 540), (720, 720), (1080, 720), (360, 360), (960, 420), (720, 540), (300, 300), (240, 300), (960, 360), (900, 60), (960, 300), (1080, 180), (540, 660), (900, 780), (300, 180), (600, 180), (960, 780), (780, 300), (960, 540), (1080, 60), (240, 480), (900, 420), (660, 420), (300, 420), (480, 240), (780, 660), (720, 600), (900, 180), (720, 240), (780, 660), (780, 480), (540, 180), (960, 120), (1080, 420), (1080, 540), (600, 360), (360, 180), (600, 720), (360, 660), (600, 480), (420, 660), (1020, 420), (780, 240), (1080, 240), (420, 300), (1020, 660), (360, 420), (1080, 780)]

# Extract Y-values from the coordinates
y_values = set(y for x, y in coordinates)

# Group the coordinates based on their Y-values
coordinate_groups = [[coord for coord in coordinates if coord[1] == y] for y in y_values]

# Sort the coordinates within each group based on their X-values
for group in coordinate_groups:
    group.sort(key=lambda coord: coord[0])

# Resulting rows
rows = coordinate_groups
print(rows)

"""
"""
blocks_positions_sorted = [
    [(180, 0), (300, 0), (420, 0), (540, 0), (660, 0), (780, 0), (900, 0), (1020, 0), (1140, 0), (180, 0), (240, 0), (300, 0), (360, 0), (420, 0), (480, 0), (540, 0), (600, 0), (660, 0), (720, 0), (780, 0), (840, 0), (900, 0), (960, 0), (1020, 0), (1080, 0), (1140, 0), (180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (1140, 840)],
    [(180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (300, 120), (420, 120), (540, 120), (660, 120), (780, 120), (900, 120), (1020, 120), (1140, 120), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (1140, 840)],
    [(180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (300, 240), (420, 240), (540, 240), (660, 240), (780, 240), (900, 240), (1020, 240), (1140, 240), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (1140, 840)],
    [(180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (300, 360), (420, 360), (540, 360), (660, 360), (780, 360), (900, 360), (1020, 360), (1140, 360), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (1140, 840)],
    [(180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (300, 480), (420, 480), (540, 480), (660, 480), (780, 480), (900, 480), (1020, 480), (1140, 480), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (1140, 840)],
    [(180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (300, 600), (420, 600), (540, 600), (660, 600), (780, 600), (900, 600), (1020, 600), (1140, 600), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (1140, 840)],
    [(180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (300, 720), (420, 720), (540, 720), (660, 720), (780, 720), (900, 720), (1020, 720), (1140, 720), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (1140, 840)],
    [(180, 0), (1140, 0), (180, 60), (1140, 60), (180, 120), (1140, 120), (180, 180), (1140, 180), (180, 240), (1140, 240), (180, 300), (1140, 300), (180, 360), (1140, 360), (180, 420), (1140, 420), (180, 480), (1140, 480), (180, 540), (1140, 540), (180, 600), (1140, 600), (180, 660), (1140, 660), (180, 720), (1140, 720), (180, 780), (1140, 780), (180, 840), (300, 840), (420, 840), (540, 840), (660, 840), (780, 840), (900, 840), (1020, 840), (1140, 840), (180, 840), (240, 840), (300, 840), (360, 840), (420, 840), (480, 840), (540, 840), (600, 840), (660, 840), (720, 840), (780, 840), (840, 840), (900, 840), (960, 840), (1020, 840), (1080, 840), (1140, 840), (180, 840), (1140, 840)]
]

# Separate the lists according to the y-coordinate
separated_lists = {}
for sublist in blocks_positions_sorted:
    for coord in sublist:
        y_coord = coord[1]
        if y_coord not in separated_lists:
            separated_lists[y_coord] = []
        separated_lists[y_coord].append(coord)

# Print the separated lists
for y_coord, sublist in sorted(separated_lists.items()):
    print(sublist)
"""
blocks_positions= [[(180, 0), (300, 0), (420, 0), (540, 0), (660, 0), (780, 0), (900, 0), (1020, 0), (1140, 0), (180, 0), (240, 0), (300, 0), (360, 0), (420, 0), (480, 0), (540, 0), (600, 0), (660, 0), (720, 0), (780, 0), (840, 0), (900, 0), (960, 0), (1020, 0), (1080, 0), (1140, 0), (180, 0), (1140, 0), (180, 0), (1140, 0), (180, 0), (1140, 0), (180, 0), (1140, 0), (180, 0), (1140, 0), (180, 0), (1140, 0), (180, 0), (1140, 0), (180, 0), (1140, 0)],
[(180, 60), (1140, 60), (180, 60), (1140, 60), (180, 60), (1140, 60), (180, 60), (1140, 60), (180, 60), (1140, 60), (180, 60), (1140, 60), (180, 60), (1140, 60), (180, 60), (1140, 60)],
[(180, 120), (1140, 120), (180, 120), (300, 120), (420, 120), (540, 120), (660, 120), (780, 120), (900, 120), (1020, 120), (1140, 120), (180, 120), (1140, 120), (180, 120), (1140, 120), (180, 120), (1140, 120), (180, 120), (1140, 120), (180, 120), (1140, 120), (180, 120), 
(1140, 120), (180, 120), (1140, 120)],
[(180, 180), (1140, 180), (180, 180), (1140, 180), (180, 180), (1140, 180), (180, 180), (1140, 180), (180, 180), (1140, 180), (180, 180), (1140, 180), (180, 180), (1140, 180), (180, 180), (1140, 180)],
[(180, 240), (1140, 240), (180, 240), (1140, 240), (180, 240), (300, 240), (420, 240), (540, 240), (660, 240), (780, 240), (900, 240), (1020, 240), (1140, 240), (180, 240), (1140, 240), (180, 240), (1140, 240), (180, 240), (1140, 240), (180, 240), (1140, 240), (180, 240), 
(1140, 240), (180, 240), (1140, 240)],
[(180, 300), (1140, 300), (180, 300), (1140, 300), (180, 300), (1140, 300), (180, 300), (1140, 300), (180, 300), (1140, 300), (180, 300), (1140, 300), (180, 300), (1140, 300), (180, 300), (1140, 300)],
[(180, 360), (1140, 360), (180, 360), (1140, 360), (180, 360), (1140, 360), (180, 360), (300, 360), (420, 360), (540, 360), (660, 360), (780, 360), (900, 360), (1020, 360), (1140, 360), (180, 360), (1140, 360), (180, 360), (1140, 360), (180, 360), (1140, 360), (180, 360), 
(1140, 360), (180, 360), (1140, 360)],
[(180, 420), (1140, 420), (180, 420), (1140, 420), (180, 420), (1140, 420), (180, 420), (1140, 420), (180, 420), (1140, 420), (180, 420), (1140, 420), (180, 420), (1140, 420), (180, 420), (1140, 420)],
[(180, 480), (1140, 480), (180, 480), (1140, 480), (180, 480), (1140, 480), (180, 480), (1140, 480), (180, 480), (300, 480), (420, 480), (540, 480), (660, 480), (780, 480), (900, 480), (1020, 480), (1140, 480), (180, 480), (1140, 480), (180, 480), (1140, 480), (180, 480), 
(1140, 480), (180, 480), (1140, 480)],
[(180, 540), (1140, 540), (180, 540), (1140, 540), (180, 540), (1140, 540), (180, 540), (1140, 540), (180, 540), (1140, 540), (180, 540), (1140, 540), (180, 540), (1140, 540), (180, 540), (1140, 540)],
[(180, 600), (1140, 600), (180, 600), (1140, 600), (180, 600), (1140, 600), (180, 600), (1140, 600), (180, 600), (1140, 600), (180, 600), (300, 600), (420, 600), (540, 600), (660, 600), (780, 600), (900, 600), (1020, 600), (1140, 600), (180, 600), (1140, 600), (180, 600), 
(1140, 600), (180, 600), (1140, 600)],
[(180, 660), (1140, 660), (180, 660), (1140, 660), (180, 660), (1140, 660), (180, 660), (1140, 660), (180, 660), (1140, 660), (180, 660), (1140, 660), (180, 660), (1140, 660), (180, 660), (1140, 660)],
[(180, 720), (1140, 720), (180, 720), (1140, 720), (180, 720), (1140, 720), (180, 720), (1140, 720), (180, 720), (1140, 720), (180, 720), (1140, 720), (180, 720), (300, 720), (420, 720), (540, 720), (660, 720), (780, 720), (900, 720), (1020, 720), (1140, 720), (180, 720), 
(1140, 720), (180, 720), (1140, 720)],
[(180, 780), (1140, 780), (180, 780), (1140, 780), (180, 780), (1140, 780), (180, 780), (1140, 780), (180, 780), (1140, 780), (180, 780), (1140, 780), (180, 780), (1140, 780), (180, 780), (1140, 780)],
[(180, 840), (1140, 840), (180, 840), (1140, 840), (180, 840), (1140, 840), (180, 840), (1140, 840), (180, 840), (1140, 840), (180, 840), (1140, 840), (180, 840), (1140, 840), (180, 840), (300, 840), (420, 840), (540, 840), (660, 840), (780, 840), (900, 840), (1020, 840), 
(1140, 840), (180, 840), (240, 840), (300, 840), (360, 840), (420, 840), (480, 840), (540, 840), (600, 840), (660, 840), (720, 840), (780, 840), (840, 840), (900, 840), (960, 840), (1020, 840), (1080, 840), (1140, 840), (180, 840), (1140, 840)]]

Dblocks_positions1= [[(240, 480), (600, 480)], [(300, 420), (360, 420), (660, 420), (900, 420), (960, 420), (1020, 420), (1080, 420)], [(360, 360), (600, 360), (960, 360)], [(240, 300), (300, 300), (420, 300), (960, 300)], [(900, 780), (960, 780), (1080, 780)], [(900, 60), (1080, 60)], [(480, 240), (600, 240), (720, 240), (780, 240), (1080, 240)], [(600, 720), (720, 720)], [(300, 180), (360, 180), (600, 180), (900, 180), (1080, 180)], [(360, 660), (420, 660), (540, 660), (780, 660), (780, 660), (1020, 660)], [(720, 600)], [(720, 540), (960, 540), (1080, 540)]]

